// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-axios';
import type { CreateChatData, CreateChatResponse, GetChatMessagesData, GetChatMessagesResponse, GetChatMessagesError, CreateMessageData, CreateMessageResponse, CreateMessageError, GetAllKnowledgeData, GetAllKnowledgeResponse, CreateKnowledgeData, CreateKnowledgeResponse, CreateKnowledgeError, DeleteKnowledgeData, DeleteKnowledgeResponse, DeleteKnowledgeError, UpdateKnowledgeData, UpdateKnowledgeResponse, UpdateKnowledgeError, RootData, RootResponse2, HealthData, HealthResponse2 } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class ChatService {
    /**
     * Create Chat
     * 建立新的對話
     */
    public static createChat<ThrowOnError extends boolean = true>(options?: Options<CreateChatData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<CreateChatResponse, unknown, ThrowOnError>({
            url: '/chat',
            ...options
        });
    }
    
    /**
     * Get Chat Messages
     * 獲取特定對話的所有訊息
     */
    public static getChatMessages<ThrowOnError extends boolean = true>(options: Options<GetChatMessagesData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetChatMessagesResponse, GetChatMessagesError, ThrowOnError>({
            url: '/chat/{chat_id}/messages',
            ...options
        });
    }
    
    /**
     * Create Message
     * 在指定對話中發送訊息
     */
    public static createMessage<ThrowOnError extends boolean = true>(options: Options<CreateMessageData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<CreateMessageResponse, CreateMessageError, ThrowOnError>({
            url: '/chat/{chat_id}/messages',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
}

export class KnowledgeService {
    /**
     * Get All Knowledge
     * 獲取所有知識項目
     */
    public static getAllKnowledge<ThrowOnError extends boolean = true>(options?: Options<GetAllKnowledgeData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetAllKnowledgeResponse, unknown, ThrowOnError>({
            url: '/knowledge',
            ...options
        });
    }
    
    /**
     * Create Knowledge
     * 建立新的知識項目
     */
    public static createKnowledge<ThrowOnError extends boolean = true>(options: Options<CreateKnowledgeData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<CreateKnowledgeResponse, CreateKnowledgeError, ThrowOnError>({
            url: '/knowledge',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    /**
     * Delete Knowledge
     * 刪除知識項目
     */
    public static deleteKnowledge<ThrowOnError extends boolean = true>(options: Options<DeleteKnowledgeData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<DeleteKnowledgeResponse, DeleteKnowledgeError, ThrowOnError>({
            url: '/knowledge/{knowledge_id}',
            ...options
        });
    }
    
    /**
     * Update Knowledge
     * 更新知識項目
     */
    public static updateKnowledge<ThrowOnError extends boolean = true>(options: Options<UpdateKnowledgeData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).put<UpdateKnowledgeResponse, UpdateKnowledgeError, ThrowOnError>({
            url: '/knowledge/{knowledge_id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
}

export class BaseService {
    /**
     * Root
     */
    public static root<ThrowOnError extends boolean = true>(options?: Options<RootData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<RootResponse2, unknown, ThrowOnError>({
            url: '/',
            ...options
        });
    }
    
    /**
     * Health
     */
    public static health<ThrowOnError extends boolean = true>(options?: Options<HealthData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<HealthResponse2, unknown, ThrowOnError>({
            url: '/health',
            ...options
        });
    }
    
}